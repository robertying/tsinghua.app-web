name: CI

on:
  push:
    branches: [main]
  schedule:
    - cron: "0 0 * * 1"

env:
  GRAPHQL_API_URL: https://api.tsinghua.app
  GRAPHQL_ADMIN_SECRET: ${{ secrets.GRAPHQL_ADMIN_SECRET }}

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - uses: pnpm/action-setup@v2
        with:
          version: 7
      - id: get-store-path
        run: echo ::set-output name=STORE_PATH::$(pnpm store path)
      - uses: actions/cache@v3
        with:
          path: ${{ steps.get-store-path.outputs.STORE_PATH }}
          key: pnpm-store-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            pnpm-store-
            pnpm-store-${{ hashFiles('pnpm-lock.yaml') }}
      - uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/.next/cache
          key: nextjs-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            nextjs-
            nextjs-${{ hashFiles('pnpm-lock.yaml') }}
      - name: Install
        run: pnpm install --frozen-lockfile
      - name: Lint
        run: pnpm lint
      - name: Type Check
        run: pnpm typecheck
      - name: Build
        run: pnpm build

  deploy:
    needs: [check]
    runs-on: ubuntu-latest
    env:
      USERNAME: ${{ github.actor }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      CONTAINER_NAME: tsinghua.app-web
    steps:
      - uses: actions/checkout@v3
      - name: Login into registry
        run: echo $GITHUB_TOKEN | docker login ghcr.io -u $USERNAME --password-stdin
      - name: Build Docker image
        run: docker build --build-arg GRAPHQL_API_URL=$GRAPHQL_API_URL --build-arg GRAPHQL_ADMIN_SECRET=$GRAPHQL_ADMIN_SECRET -t ghcr.io/${{ github.repository }}/$CONTAINER_NAME:latest .
      - name: Push to registry
        run: docker push ghcr.io/${{ github.repository }}/$CONTAINER_NAME:latest
